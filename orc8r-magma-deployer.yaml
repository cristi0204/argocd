certs:
  create: true
  enabled: true
  domainName: "btic.5g"
  
  bootstrapper:
    # 1 year = 8760h
    duration: 8760h0m0s
    renewBefore: 24h0m0s

  adminOperator:
    # 10 year = 87600h
    duration: 87600h0m0s
    renewBefore: 24h0m0s
    customIssuer:
    pkcs12:
      password: password

  certifier:
    # 10 year = 87600h
    duration: 87600h0m0s
    renewBefore: 24h0m0s

  nms:
    # 10 year = 87600h
    duration: 87600h0m0s
    renewBefore: 24h0m0s

  controller:
    # 10 year = 87600h
    duration: 87600h0m0s
    renewBefore: 24h0m0s

  fluentd:
    # 10 year = 87600h
    duration: 87600h0m0s
    renewBefore: 24h0m0s

  root:
    # 10 year = 87600h
    duration: 87600h0m0s
    renewBefore: 24h0m0s

bootstrapper:
  spec:
  #   template:
  #     spec:
  #       containers:
    volumeMounts:
      - mountPath: /var/opt/magma/certs/rootCA.pem
        name: root
        readOnly: true
        subPath: tls.crt
      
nms:
  magmalte:
    image:
      repository: "linuxfoundation.jfrog.io/magma-docker/magmalte"
      tag: "1.8.0"
      pullPolicy: IfNotPresent
    env:
      api_host: orc8r-nginx-proxy
      mysql_host: postgresql
      mysql_user: postgres
      mysql_pass: postgres
  nginx:
    image:
      pullPolicy: IfNotPresent
    service:
      type: "LoadBalancer"
  secret:
    certs:  orc8r-secrets-certs
nginx:
  replicas: 1
  image:
    repository: "linuxfoundation.jfrog.io/magma-docker/nginx"
    tag: "1.8.0"
  spec:
    hostname: controller.btic.5g
  service:
    type: "LoadBalancer"
controller:
  replicas: 1
  image:
    repository: "linuxfoundation.jfrog.io/magma-docker/controller"
    tag: "1.8.0"
    env:
      orc8r_domain_name: "btic.5g"
  podDisruptionBudget:
    enabled: true
metrics:
  prometheus:
    includeOrc8rAlerts: true
    create: true
  prometheusCache:
    create: true
    limit: 5000 #500000
  prometheusConfigurer:
    create: true
  alertmanager:
    create: true
  alertmanagerConfigurer:
    create: true
  metrics:
    volumes:
      prometheusData:
        volumeSpec:
          emptyDir: {}
      prometheusConfig:
        volumeSpec:
          emptyDir: {}
#     volumes:
#       prometheusConfig:
#         volumeSpec:
#           persistentVolumeClaim:
#             claimName: promcfg
#       prometheusData:
#         volumeSpec:
#           persistentVolumeClaim:
#             claimName: promdata
  userGrafana:
    volumes:
      datasources:
        volumeSpec:
          persistentVolumeClaim:
            claimName: grafanadatasources
      dashboardproviders:
        volumeSpec:
          persistentVolumeClaim:
            claimName: grafanaproviders
      dashboards:
        volumeSpec:
          persistentVolumeClaim:
            claimName: grafanadashboards
      grafanaData:
        volumeSpec:
          persistentVolumeClaim:
            claimName: grafanadata
secrets:
  create: true
  docker:
    registry: docker.io
    username: username
    password: password
  secret:
    certs:
      enabled: false
      files: {}
bootstrapper:
  extraVolumes:
    - name: orc8r-root-tls
      secret:
        secretName: orc8r-root-tls
  extraVolumeMounts:
    - name: orc8r-root-tls
      mountPath: /var/opt/magma/certs/rootCA.pem
      readOnly: true
      subPath: tls.crt    

